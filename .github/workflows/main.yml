# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-win:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    env:
      VALVE_NO_AUTO_P4: 1
      PreferredToolArchitecture: x64
    defaults:
      run:
        working-directory: ./src
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    
    - name: cd
      run: pwd src

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: reg immport
      run: REG IMPORT regkeys.reg
      
    - name: download libs
      run: .\download_libs.bat
      
    - name: build protobuf
      run: |
        msbuild /m /p:Configuration=Debug   thirdparty\protobuf-2.6.1\vsprojects\libprotobuf.vcxproj
        msbuild /m /p:Configuration=Release thirdparty\protobuf-2.6.1\vsprojects\libprotobuf.vcxproj
    
    - name: gen project
      run: .\creategameprojects_dev.bat

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
